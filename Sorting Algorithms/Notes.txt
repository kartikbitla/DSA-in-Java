
*****Types of sorting algorithms*****
Bubble sort
Selecetion sort
Insertion sort
Bucket sort
Merge sort
Quick sort
Heap sort


1. Bubble sort 
 - Bubble srt is also referred as Sinking sort
 - We repeatedly compare each pair of adjacent items and swap them if they are in the wrong order

when to use Bubble Sort?
 - When the input is almost sorted
 - Space is concern
 - Easy to implement

When to avoid Bubble Sort?
 - Average time complexity is poor




2. Selection sort
 - In case of selection sort we repeatedly find the minimum element and move it to the sorted part of array to make unsorted part sorted. 

When to use Selection sort?
 - When we have insufficient memory
 - Easy to implement

When to avoid Selection Sort?
 - When time is a concern





3. Insertion sort
 - Divide the given array into two part
 - Take first element from unsorted array and find its correct position in sorted array
 - Repeat until unsorted array is empty

When to use Insertion sort?
 - When we have insufficient memory
 - Easy to implement
 - When we have continuous inflow of numbers and we want to keep them sorted

When to avoid Insertion sort?
 - When time is a concern


4. Bucket sort
 - Create buckets and distribute elements of array into buckets
 - Sort buckets individually
 - Merge buckets after sortig

 number of buckets = round(Sqrt(number of elements))
 round(sqrt(9)) = 3

 Appropriate bucket = ceil(Value * number of buckets / maxValue)
 sort all buckets(using any sorting algorithms)

 When to use Bucket Sort?
  - When input uniformly distributed over range
    - uniformly distributed - 1,2,4,5,3,8,7,9
    - uniformly not distributed - 1,2,4,9,10,93,96

 When to avoid Bucket Sort? 
 - When space is a concern 